{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","react_default","a","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowclick","e","onDeleteClick","delete","_this$props$contact","name","email","phone","className","onClick","style","float","cursor","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","Contact_Contact","Header","branding","href","defaultProps","NotFound","TextInputGroup","_ref","lable","placeholder","onChange","error","htmlFor","classnames","is-invalid","propType","PropTypes","string","isRequired","func","AddContact","errors","defineProperty","target","onSubmit","preventDefault","_this$state","uuid","history","push","_this$state2","EditContact","updContact","match","params","put","_this3","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4QAEMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAClCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAGV,QACE,OAAOP,IAGAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAH9De,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,WAMsB,IAAAC,EAAAjB,KAClBkB,IAAMC,IAAI,8CAA8CC,KAAK,SAAAC,GAC3DJ,EAAKL,SAAS,CACZzB,SAAUkC,EAAIC,WATtB,CAAAP,IAAA,SAAAC,MAAA,WAeI,OACEO,EAAAC,EAAAC,cAAC/C,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAK0B,MAAMC,cAjBpBhC,EAAA,CAA8BiC,aAuBjBC,EAAWnD,EAAQmD,iBChDXC,6MACnBhD,MAAQ,CACNiD,iBAAiB,KAEnBC,YAAc,SAAAC,GACZnC,EAAKc,SAAS,CAAEmB,iBAAkBjC,EAAKhB,MAAMiD,qBAE/CG,cAAgB,SAAC5C,EAAIqB,GACnBO,IACGiB,OADH,8CAAA3C,OACwDF,IACrD8B,KAAK,SAAAC,GACJV,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,+EAGzC,IAAA2B,EAAAjB,KAAAoC,EAC4BpC,KAAK0B,MAAMrC,QAAtCC,EADD8C,EACC9C,GAAI+C,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACjBR,EAAoB/B,KAAKlB,MAAzBiD,gBACR,OACER,EAAAC,EAAAC,cAACI,EAAD,KACG,SAAAb,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEY,EAAAC,EAAAC,cAAA,OAAKe,UAAU,uBACbjB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMe,UAAU,mBAAmBH,GACnCd,EAAAC,EAAAC,cAAA,KAAGgB,QAASxB,EAAKe,YAAaQ,UAAU,qBACxCjB,EAAAC,EAAAC,cAAA,KACEe,UAAU,eACVE,MAAO,CAAEC,MAAO,QAASC,OAAQ,UAAWC,MAAO,OACnDJ,QAASxB,EAAKiB,cAAcY,KAAK7B,EAAM3B,EAAIqB,KAE7CY,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAE,iBAAAxD,OAAmBF,IACzBiC,EAAAC,EAAAC,cAAA,KACEe,UAAU,cACVE,MAAO,CACLE,OAAQ,UACRD,MAAO,QACPE,MAAO,QACPI,YAAa,YAKpBlB,EACCR,EAAAC,EAAAC,cAAA,MAAIe,UAAU,cACZjB,EAAAC,EAAAC,cAAA,MAAIe,UAAU,mBAAd,SAAuCF,GACvCf,EAAAC,EAAAC,cAAA,MAAIe,UAAU,mBAAd,SAAuCD,IAEvC,eAhDmBX,aCHhBsB,mLAEjB,OACE3B,EAAAC,EAAAC,cAACI,EAAD,KACG,SAAAb,GAAS,IACA7B,EAAa6B,EAAb7B,SACR,OACEoC,EAAAC,EAAAC,cAACF,EAAAC,EAAM2B,SAAP,KACE5B,EAAAC,EAAAC,cAAA,MAAIe,UAAU,kBAAd,WACUjB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,eAAhB,SAETrD,EAASO,IAAI,SAAAL,GAAO,OACnBkC,EAAAC,EAAAC,cAAC2B,EAAD,CAASrC,IAAK1B,EAAQC,GAAID,QAASA,gBAZbuC,qBCAhCyB,EAAS,SAAA3B,GAAS,IACd4B,EAAa5B,EAAb4B,SACR,OACE/B,EAAAC,EAAAC,cAAA,OAAKe,UAAU,2DACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,aACbjB,EAAAC,EAAAC,cAAA,KAAG8B,KAAK,IAAIf,UAAU,gBACnBc,GAGH/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIe,UAAU,sBACZjB,EAAAC,EAAAC,cAAA,MAAIe,UAAU,YACZjB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YACrBjB,EAAAC,EAAAC,cAAA,KAAGe,UAAU,gBADf,UAIFjB,EAAAC,EAAAC,cAAA,MAAIe,UAAU,YACZjB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAChCjB,EAAAC,EAAAC,cAAA,KAAGe,UAAU,gBADf,cAUda,EAAOG,aAAe,CACpBF,SAAU,mBAKGD,QClCA,SAASI,IACtB,OACElC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIe,UAAU,aACZjB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,eAAhB,OADF,mBAGAjB,EAAAC,EAAAC,cAAA,KAAGe,UAAU,QAAb,kFCJS,SAASkB,EAATC,GAQZ,IAPDC,EAOCD,EAPDC,MACAvB,EAMCsB,EANDtB,KACArD,EAKC2E,EALD3E,KACA6E,EAICF,EAJDE,YACA7C,EAGC2C,EAHD3C,MACA8C,EAECH,EAFDG,SACAC,EACCJ,EADDI,MAEA,OACExC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cACbjB,EAAAC,EAAAC,cAAA,SAAOuC,QAAS3B,GAAOuB,GACvBrC,EAAAC,EAAAC,cAAA,SACEzC,KAAMA,EACN6E,YAAaA,EACbxB,KAAMA,EACNG,UAAWyB,IAAW,+BAAgC,CACpDC,aAAcH,IAEhB/C,MAAOA,EACP8C,SAAUA,IAEXC,GAASxC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,oBAAoBuB,IAKnDL,EAAeS,SAAW,CACxB9B,KAAM+B,IAAUC,OAAOC,WACvBV,MAAOQ,IAAUC,OAAOC,WACxBT,YAAaO,IAAUC,OAAOC,WAC9BtF,KAAMoF,IAAUC,OAAOC,WACvBtD,MAAOoD,IAAUC,OAAOC,WACxBR,SAAUM,IAAUG,KAAKD,WACzBP,MAAOK,IAAUC,QAEnBX,EAAeF,aAAe,CAC5BxE,KAAM,6BCpCawF,6MACnB1F,MAAQ,CACNuD,KAAM,GACNC,MAAO,GACPC,MAAO,GACPkC,OAAQ,MAGVX,SAAW,SAAA7B,GACTnC,EAAKc,SAAL3B,OAAAyF,EAAA,EAAAzF,CAAA,GAAiBgD,EAAE0C,OAAOtC,KAAOJ,EAAE0C,OAAO3D,WAG5C4D,SAAW,SAACjE,EAAUsB,GACpBA,EAAE4C,iBADwB,IAAAC,EAGKhF,EAAKhB,MAA5BuD,EAHkByC,EAGlBzC,KAAMC,EAHYwC,EAGZxC,MAAOC,EAHKuC,EAGLvC,MAGR,KAATF,EAIU,KAAVC,EAIU,KAAVC,GAYJ5B,EAAS,CAAE3B,KAAM,cAAeO,QAPb,CACjBD,GAAIyF,MACJ1C,OACAC,QACAC,WAMFzC,EAAKc,SAAS,CACZyB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPkC,OAAQ,KAEV3E,EAAK4B,MAAMsD,QAAQC,KAAK,MApBtBnF,EAAKc,SAAS,CAAE6D,OAAQ,CAAElC,MAAO,uBAJjCzC,EAAKc,SAAS,CAAE6D,OAAQ,CAAEnC,MAAO,uBAJjCxC,EAAKc,SAAS,CAAE6D,OAAQ,CAAEpC,KAAM,+FA8B3B,IAAApB,EAAAjB,KAAAkF,EACgClF,KAAKlB,MAApCuD,EADD6C,EACC7C,KAAMC,EADP4C,EACO5C,MAAOC,EADd2C,EACc3C,MAAOkC,EADrBS,EACqBT,OAE5B,OACElD,EAAAC,EAAAC,cAACI,EAAD,KACG,SAAAb,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEY,EAAAC,EAAAC,cAAA,OAAKe,UAAU,aACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,eAAf,eACAjB,EAAAC,EAAAC,cAAA,QACEe,UAAU,YACVoC,SAAU3D,EAAK2D,SAAS9B,KAAK7B,EAAMN,IAEnCY,EAAAC,EAAAC,cAACiC,EAAD,CACEE,MAAM,OACNvB,KAAK,OACLwB,YAAY,eACZ7C,MAAOqB,EACPyB,SAAU7C,EAAK6C,SACfC,MAAOU,EAAOpC,OAEhBd,EAAAC,EAAAC,cAACiC,EAAD,CACEE,MAAM,QACNvB,KAAK,QACLwB,YAAY,gBACZ7C,MAAOsB,EACPwB,SAAU7C,EAAK6C,SACfC,MAAOU,EAAOnC,QAEhBf,EAAAC,EAAAC,cAACiC,EAAD,CACEE,MAAM,QACNvB,KAAK,QACLwB,YAAY,gBACZ7C,MAAOuB,EACPuB,SAAU7C,EAAK6C,SACfC,MAAOU,EAAOlC,QAEhBhB,EAAAC,EAAAC,cAAA,SACEzC,KAAK,SACLgC,MAAM,cACNwB,UAAU,yCA1FYZ,aCAnBuD,6MACnBrG,MAAQ,CACNuD,KAAM,GACNC,MAAO,GACPC,MAAO,GACPkC,OAAQ,MAGVX,SAAW,SAAA7B,GACTnC,EAAKc,SAAL3B,OAAAyF,EAAA,EAAAzF,CAAA,GAAiBgD,EAAE0C,OAAOtC,KAAOJ,EAAE0C,OAAO3D,WAc5C4D,SAAW,SAACjE,EAAUsB,GACpBA,EAAE4C,iBADwB,IAAAC,EAGKhF,EAAKhB,MAA5BuD,EAHkByC,EAGlBzC,KAAMC,EAHYwC,EAGZxC,MAAOC,EAHKuC,EAGLvC,MAErB,GAAa,KAATF,EAIJ,GAAc,KAAVC,EAIJ,GAAc,KAAVC,EAAJ,CAKA,IAAM6C,EAAa,CACjB/C,OACAC,QACAC,SAGMjD,EAAOQ,EAAK4B,MAAM2D,MAAMC,OAAxBhG,GAER4B,IACGqE,IADH,8CAAA/F,OACqDF,GAAM8F,GACxDhE,KAAK,SAAAC,GACJV,EAAS,CAAE3B,KAAM,iBAAkBO,QAAS8B,EAAIC,SAGpDxB,EAAKc,SAAS,CACZyB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPkC,OAAQ,KAEV3E,EAAK4B,MAAMsD,QAAQC,KAAK,UAxBtBnF,EAAKc,SAAS,CAAE6D,OAAQ,CAAElC,MAAO,4BAJjCzC,EAAKc,SAAS,CAAE6D,OAAQ,CAAEnC,MAAO,4BAJjCxC,EAAKc,SAAS,CAAE6D,OAAQ,CAAEpC,KAAM,0GAjBhB,IAAApB,EAAAjB,KACVV,EAAOU,KAAK0B,MAAM2D,MAAMC,OAAxBhG,GACR4B,IAAMC,IAAN,8CAAA3B,OAAwDF,IAAM8B,KAAK,SAAAC,GACjEJ,EAAKL,SAAS,CACZyB,KAAMhB,EAAIC,KAAKe,KACfC,MAAOjB,EAAIC,KAAKgB,MAChBC,MAAOlB,EAAIC,KAAKiB,2CA6Cb,IAAAiD,EAAAxF,KAAAkF,EACgClF,KAAKlB,MAApCuD,EADD6C,EACC7C,KAAMC,EADP4C,EACO5C,MAAOC,EADd2C,EACc3C,MAAOkC,EADrBS,EACqBT,OAE5B,OACElD,EAAAC,EAAAC,cAACI,EAAD,KACG,SAAAb,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEY,EAAAC,EAAAC,cAAA,OAAKe,UAAU,aACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,eAAf,kBACAjB,EAAAC,EAAAC,cAAA,QACEe,UAAU,YACVoC,SAAUY,EAAKZ,SAAS9B,KAAK0C,EAAM7E,IAEnCY,EAAAC,EAAAC,cAACiC,EAAD,CACEE,MAAM,OACNvB,KAAK,OACLwB,YAAY,eACZ7C,MAAOqB,EACPyB,SAAU0B,EAAK1B,SACfC,MAAOU,EAAOpC,OAEhBd,EAAAC,EAAAC,cAACiC,EAAD,CACEE,MAAM,QACNvB,KAAK,QACLwB,YAAY,gBACZ7C,MAAOsB,EACPwB,SAAU0B,EAAK1B,SACfC,MAAOU,EAAOnC,QAEhBf,EAAAC,EAAAC,cAACiC,EAAD,CACEE,MAAM,QACNvB,KAAK,QACLwB,YAAY,gBACZ7C,MAAOuB,EACPuB,SAAU0B,EAAK1B,SACfC,MAAOU,EAAOlC,QAEhBhB,EAAAC,EAAAC,cAAA,SACEzC,KAAK,SACLgC,MAAM,iBACNwB,UAAU,yCAxGaZ,mBC0B1B6D,MApBf,WACE,OACElE,EAAAC,EAAAC,cAACiE,EAAD,KACEnE,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OACbjB,EAAAC,EAAAC,cAACkE,EAAD,MACApE,EAAAC,EAAAC,cAAA,OAAKe,UAAU,aACbjB,EAAAC,EAAAC,cAACmE,EAAA,EAAD,KACErE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7C,IACjC3B,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWvB,IAC5CjD,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWZ,IACjD5D,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOG,UAAWtC,UCVZuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASd,MACvB,2DCbNe,IAASC,OAAO9E,EAAAC,EAAAC,cAAC6E,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvF,KAAK,SAAAwF,GACjCA,EAAaC","file":"static/js/main.e0e953ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get('https://jsonplaceholder.typicode.com/users').then(res => {\r\n      this.setState({\r\n        contacts: res.data\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default class Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onShowclick = e => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n  onDeleteClick = (id, dispatch) => {\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then(res => {\r\n        dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n      });\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-2\">\r\n              <h4>\r\n                <span className=\"text-capitalize\">{name}</span>\r\n                <i onClick={this.onShowclick} className=\"fas fa-sort-down\" />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ float: 'right', cursor: 'pointer', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-edit\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email:{email}</li>\r\n                  <li className=\"list-group-item\">Phone:{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\nexport default class Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-4\">\r\n                Contact <span className=\"text-danger\">List</span>\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-2 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  branding: 'Conatct Manager'\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist.</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nexport default function TextInputGroup({\r\n  lable,\r\n  name,\r\n  type,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error\r\n}) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{lable}</label>\r\n      <input\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.propType = {\r\n  name: PropTypes.string.isRequired,\r\n  lable: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'uuid';\r\n\r\nexport default class AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    const { name, email, phone } = this.state;\r\n\r\n    // check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    dispatch({ type: 'ADD_CONTACT', payload: newContact });\r\n\r\n    // clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-2\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <form\r\n                className=\"card-body\"\r\n                onSubmit={this.onSubmit.bind(this, dispatch)}\r\n              >\r\n                <TextInputGroup\r\n                  lable=\"Name\"\r\n                  name=\"name\"\r\n                  placeholder=\"Enter Name..\"\r\n                  value={name}\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                />\r\n                <TextInputGroup\r\n                  lable=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter Email..\"\r\n                  value={email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                />\r\n                <TextInputGroup\r\n                  lable=\"Phone\"\r\n                  name=\"phone\"\r\n                  placeholder=\"Enter Phone..\"\r\n                  value={phone}\r\n                  onChange={this.onChange}\r\n                  error={errors.phone}\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Add Contact\"\r\n                  className=\"btn btn-success btn-block\"\r\n                />\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nexport default class EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    axios.get(`https://jsonplaceholder.typicode.com/users/${id}`).then(res => {\r\n      this.setState({\r\n        name: res.data.name,\r\n        email: res.data.email,\r\n        phone: res.data.phone\r\n      });\r\n    });\r\n  }\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    const { name, email, phone } = this.state;\r\n    // check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    axios\r\n      .put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact)\r\n      .then(res => {\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n      });\r\n    // clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-2\">\r\n              <div className=\"card-header\">Update Contact</div>\r\n              <form\r\n                className=\"card-body\"\r\n                onSubmit={this.onSubmit.bind(this, dispatch)}\r\n              >\r\n                <TextInputGroup\r\n                  lable=\"Name\"\r\n                  name=\"name\"\r\n                  placeholder=\"Enter Name..\"\r\n                  value={name}\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                />\r\n                <TextInputGroup\r\n                  lable=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter Email..\"\r\n                  value={email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                />\r\n                <TextInputGroup\r\n                  lable=\"Phone\"\r\n                  name=\"phone\"\r\n                  placeholder=\"Enter Phone..\"\r\n                  value={phone}\r\n                  onChange={this.onChange}\r\n                  error={errors.phone}\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Update Contact\"\r\n                  className=\"btn btn-success btn-block\"\r\n                />\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Contacts from './components/contacts/Contacts';\nimport { Provider } from './context';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport NotFound from './components/pages/NotFound';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}